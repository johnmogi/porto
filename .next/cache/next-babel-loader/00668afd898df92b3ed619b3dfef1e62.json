{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { StylesProvider } from '@material-ui/styles';\nimport { ThemeProvider as StyledComponentProvider } from 'styled-components';\nimport { ThemeProvider as MaterialUiProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../themes/dark';\nexport default class MyApp extends App {\n  componentDidMount() {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"preload\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\",\n      as: \"font\"\n    })), __jsx(StyledComponentProvider, {\n      theme: theme\n    }, __jsx(MaterialUiProvider, {\n      theme: theme\n    }, __jsx(StylesProvider, {\n      injectFirst: true\n    }, __jsx(CssBaseline, null), __jsx(Component, pageProps)))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}